{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The name, in Azure, for the FTD Virtual Machine."
      }
    },
    "FTDHostname": {
      "type": "string",
      "metadata": {
        "description": "FTD hostname - this is the FTD's own setting for its host-id"
      }
    },
    "aZone": {
      "type": "string",
      "defaultValue": "none",
      "allowedValues": [
        "none",
        "1",
        "2",
        "3"
      ],
      "metadata": {
        "description": "Availability Zone"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D3_v2",
      "allowedValues": [
        "Standard_D5_v2",
        "Standard_D4_v2",
        "Standard_D3_v2",
        "Other"
      ],
      "metadata": {
        "description": "VM size to use. Be aware that not all regions support the same sizes."
      }
    },
    "vmSizeOther": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "Override VM Size. Be sure to check Cisco documentation for supported sizes. Be aware that not all regions support the same sizes." }
    },
    "softwareDisplayVersion": {
      "type": "string",
      "defaultValue": "7.0.0(94)",
      "allowedValues": [
        "7.0.0(94)",
        "6.7.0(65)",
        "6.6.4(59)",
        "6.4.0(110)",
        "Other"
      ],
      "metadata": {
        "description": "Software version to use."
      }
    },
    "softwareVersionOther": {
      "type": "string",
      "defaultValue": "None",
      "metadata": {
        "description": "Override Software Display Version with another value. Run the Azure CLI command 'az vm image list --all --publisher cisco --offer cisco-ftdv -o table' to see the current available versions." }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "ftdv-azure-byol",
      "allowedValues": [
        "ftdv-azure-byol",
        "ftdv-azure-payg"
      ],
      "metadata": {
        "description": "License SKU. Bring Your Own License or Pay As You Go." }
    },
    "useKey": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Use SSH key"
      }
    },
    "keyData": {
      "type": "string",
      "defaultValue": "none",
      "metadata": {
        "description": "SSH key"
      }
    },
    "altUsername": {
      "type": "string",
      "defaultValue": "altadmin",
      "metadata": {
        "description": "Alternate Username for the Virtual Machine (it can not be 'admin').  This username is generally not used but is required by Azure"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to use if logging in with the altUsername id"
      }
    },
    "FTDAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for FTD. use this with the actual 'admin' username when using ssh or https"
      }
    },
    "FMCIp": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FMC IP address"
      }
    },
    "FMCRegKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FMC registration key"
      }
    },
    "FMCNatId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "FMC NAT ID"
      }
    },
    "manageLocally": {
      "type": "string",
      "defaultValue": "yes",
      "allowedValues": [
        "no",
        "yes"
      ],
      "metadata": {
        "description": "Is the device managed locally? (no,yes)"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network name"
      }
    },
    "virtualNetworkResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network resource group"
      }
    },
    "mgmtSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of management subnet"
      }
    },
    "mgmtFTDprivateAddress": {
      "type": "string",
      "metadata": {
        "description": "Private IP Address for the FTD management interface"
      }
    },
    "diagSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of diagnostic subnet"
      }
    },
    "diagFTDprivateAddress": {
      "type": "string",
      "metadata": {
        "description": "Private IP Address for the FTDs diagnostic interface"
      }
    },
    "outsideSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of outside subnet"
      }
    },
    "outsideFTDprivateAddress": {
      "type": "string",
      "metadata": {
        "description": "Private IP Address for the FTDs outside interface"
      }
    },
    "insideSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of inside subnet"
      }
    },
    "insideFTDprivateAddress": {
      "type": "string",
      "metadata": {
        "description": "Private IP Address for the FTDs inside interface"
      }
    },
    "nsgResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "NSG Resource Group"
      }
    },
    "mgmtNSGName": {
      "type": "string",
      "metadata": {
        "description": "NSG name for management NIC"
      }
    },
    "outsideNSGName": {
      "type": "string",
      "metadata": {
        "description": "NSG name for outside NIC"
      }
    },
    "storageAccountPrefix": {
      "type": "string",
      "metadata": {
        "description": "Prefix for storage account name"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Storage account type"
      }
    }
  },
  "variables": {
    "vmEffectiveSize": "[if(equals(parameters('vmSize'), 'Other'), parameters('vmSizeOther'), parameters('vmSize'))]",
    "sversion0": "[parameters('softwareDisplayVersion')]",
    "sversion1": "[replace(variables('sversion0'),'7.0.0(94)','700.94.0')]",
    "sversion2": "[replace(variables('sversion1'),'6.7.0(65)','67065.0.0')]",
    "sversion3": "[replace(variables('sversion2'),'6.6.4(59)','66459.0.0')]",
    "sversion4": "[replace(variables('sversion3'),'6.4.0(110)','640110.0.0')]",
    "softwareVersion": "[if(equals(parameters('softwareDisplayVersion'), 'Other'), parameters('softwareVersionOther'), variables('sversion4'))]",
    "zones": ["[parameters('aZone')]"],
    "mgmtNSGId": "[resourceId(parameters('nsgResourceGroup'),'Microsoft.Network/networkSecurityGroups', parameters('mgmtNSGName'))]",
    "outsideNSGId": "[resourceId(parameters('nsgResourceGroup'),'Microsoft.Network/networkSecurityGroups', parameters('outsideNSGName'))]",
    "imagePublisher": "cisco",
    "imageOffer": "cisco-ftdv",
    "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "vnetId": "[resourceId(parameters('virtualNetworkResourceGroup'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "mgmtSubnetRef": "[concat(variables('vnetId'),'/subnets/', parameters('mgmtSubnetName'))]",
    "diagSubnetRef": "[concat(variables('vnetId'),'/subnets/', parameters('diagSubnetName'))]",
    "outsideSubnetRef": "[concat(variables('vnetId'),'/subnets/', parameters('outsideSubnetName'))]",
    "insideSubnetRef": "[concat(variables('vnetId'),'/subnets/', parameters('insideSubnetName'))]",
    "customData": "[concat('{\"AdminPassword\":\"', parameters('FTDAdminPassword'), '\",\"Hostname\":\"', parameters('FTDHostname'), '\",\"FmcIp\":\"', parameters('FMCIp'), '\",\"FmcRegKey\":\"', parameters('FMCRegKey'), '\",\"FmcNatId\":\"', parameters('FMCNatId'), '\",\"ManageLocally\":\"', parameters('manageLocally'),'\"}') ]",
    "storageAccountName": "[concat(parameters('storageAccountPrefix'),uniqueString(resourceGroup().id))]",
    "managementPublicIPAddressName": "[concat(parameters('vmName'),'management-ip')]",
    "managementPublicIPAddressId": {
      "id": "[resourceId(resourceGroup().name,'Microsoft.Network/PublicIPAddresses',variables('managementPublicIPAddressName'))]"
    },
    "outsidePublicIPAddressName": "[concat(parameters('vmName'),'outside-ip')]",
    "outsidePublicIPAddressId": {
      "id": "[resourceId(resourceGroup().name,'Microsoft.Network/PublicIPAddresses',variables('outsidePublicIPAddressName'))]"
    },
    "mgmtNICName": "[concat(parameters('vmName'),'-nic0')]",
    "diagNICName": "[concat(parameters('vmName'),'-nic1')]",
    "outsideNICName": "[concat(parameters('vmName'),'-nic2')]",
    "insideNICName": "[concat(parameters('vmName'),'-nic3')]",
    "linuxJSON": {
     "disablePasswordAuthentication": true,
     "ssh": {
              "publicKeys": [
                     {
                       "path": "[concat('/home/',parameters('altUsername'),'/.ssh/authorized_keys')]",
                       "keyData": "[parameters('keyData')]"
                     }
              ]
     }
    },
    "osProfilepassword": {
      "computername": "[parameters('vmName')]",
      "adminUsername": "[parameters('altUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "linuxConfiguration": "[if(parameters('useKey'),variables('linuxJSON'),json('null'))]",
      "customData": "[base64(variables('customData'))]"
    }
  },
  "resources": [
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('managementPublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 30
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('outsidePublicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 30
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('mgmtNICName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('managementPublicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('mgmtFTDprivateAddress')]",
              "subnet": {
                "id": "[variables('mgmtSubnetRef')]"
              },
              "publicIPAddress": "[variables('managementPublicIPAddressId')]"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('mgmtNSGId')]"
        }
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('diagNICName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('diagFTDprivateAddress')]",
              "subnet": {
                "id": "[variables('diagSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('outsideNICName')]",
      "location": "[resourceGroup().location]",
            "dependsOn": [
      "[concat('Microsoft.Network/publicIPAddresses/', variables('outsidePublicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('outsideFTDprivateAddress')]",
              "subnet": {
                "id": "[variables('outsideSubnetRef')]"
              },
              "publicIPAddress": "[variables('outsidePublicIPAddressId')]"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[variables('outsideNSGId')]"
        },
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": "[if(contains('62-63-64-65-66', substring(variables('softwareVersion'),0,2)), bool('false'), bool('true'))]"
      }
    },
    {
      "apiVersion": "2019-06-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('insideNICName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('insideFTDprivateAddress')]",
              "subnet": {
                "id": "[variables('insideSubnetRef')]"
              }
            }
          }
        ],
        "enableIPForwarding": true,
        "enableAcceleratedNetworking": "[if(contains('62-63-64-65-66', substring(variables('softwareVersion'),0,2)), bool('false'), bool('true'))]"
      }
    },
    {
      "apiVersion": "2020-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[resourceGroup().location]",
      "plan": {
        "name": "[parameters('imageSKU')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('mgmtNICName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('diagNICName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('outsideNICName'))]",
        "[concat('Microsoft.Network/networkInterfaces/',variables('insideNICName'))]"
      ],
      "zones": "[if(equals(parameters('aZone'),'none'), json('null'), variables('zones'))]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmEffectiveSize')]"
        },
        "osProfile": "[variables('osProfilepassword')]",
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "[variables('softwareVersion')]"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('storageAccountType')]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('mgmtNICName'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('diagNICName'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('outsideNICName'))]"
            },
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('insideNICName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageuri": "[reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2019-06-01').primaryEndpoints.blob]"
          }
        }
      }
    }
  ]
}
